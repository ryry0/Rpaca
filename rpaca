#!/bin/bash

CONFIG_FILE="$HOME/rpaca-prog/rpaca.conf" # should eventually be /etc/rpaca/rpaca.conf

# Configuration variables: (overloaded by rpaca.conf)
# Config defaults:
PKG_DIR="$HOME/rpaca-pacs" # where all packages are made + stored
REPO_DIR="$HOME/rpaca-repo"
SRC_DIR="$HOME/rpaca-sources"
LOGFILE="$HOME/rpaca-prog/log"
PKG_INDEX="$HOME/rpaca-index"
GLOBAL_CFLAGS=""
LOGGING=true
DEBUG=true

#---------------------------------------------------------------
# Main functions

checkConflicts() {
	return
}

checkDeps() {
	return
}

backupCurrent() {
	return
}

loadBuildFile() {
	logMessage "Loading $REPO_DIR/$PKG.rpac"
	source $REPO_DIR/$PKG.rpac || die "$PKG.rpac not found"
}
 
loadTemplateBuild() {
	source $REPO_DIR/template.rpac
}

logMessage() {
	DATE_STRING=$(date +"[%D] %T")
	if [ "$DEBUG" == "true" ]; then
		echo $DATE_STRING - $1	
	fi

	if [ "$LOGGING" == "true" ]; then
		echo $DATE_STRING - $1 >> $LOGFILE
	fi
}

die() {
	DATE_STRING=$(date +"[%D] %T")
	echo $DATE_STRING - $1

	if [ "$LOGGING" == "true" ]; then
		echo $DATE_STRING - $1 >> $LOGFILE
	fi
	exit 1
}

#---------------------------------------------------------------

DOWNLOAD=false
COMPILE=false
EXTRACT=false
CLEAN=false
CHECK=false
BUILD=false
INSTALL=false
REMOVE=false
LIST_INSTALLED_FILES=false
SEARCH=false
DEL_SOURCE=false
DEL_DOWNLOAD=false
DEL_PACKAGE=false

PACKAGES=()

loadTemplateBuild

# Load configuration
source $CONFIG_FILE

# From stackoverflow parse command line args in bash
while [[ $# > 0 ]]
do 
arg="$1"

case $arg in
	-d|--download)
		DOWNLOAD=true
	;;

	-c|--compile)
		COMPILE=true
	;;

	-e|--extract-source)
		EXTRACT=true
	;;

	--clean-source)
		CLEAN=true
	;;

	--check-source)
		CHECK=true
	;;

	-b|--build)
		BUILD=true
	;;

	-i|--install)
		INSTALL=true
	;;

	-I|--full-install)
		EXTRACT=true
		COMPILE=true
		BUILD=true
		INSTALL=true
	;;

	-S|--full-install-download)
		DOWNLOAD=true
		EXTRACT=true
		COMPILE=true
		BUILD=true
		INSTALL=true
	;;

	-r|--remove)
		REMOVE=true
	;;

	-l|--list-installed)
		ls -1 $PKG_INDEX
		exit 0
	;;

	-L|--list-installed-files)
		LIST_INSTALLED_FILES=true
	;;

	-s|--search)
		ls $REPO_DIR/ -1 | sed 's/.rpac//' | grep $2
		exit 0
	;;

	--delete-source)
		DEL_SOURCE=true
	;;

	--delete-download)
		DEL_DOWNLOAD=true
	;;

	--delete-package)
		DEL_PACKAGE=true
	;;

	*) #default case
		PACKAGES=("${PACKAGES[@]}" "$arg")
		echo ${PACKAGES[@]}
	;;
esac
shift
done

for i in "${PACKAGES[@]}"
do
	PKG="$i"
	loadBuildFile

	if [ "$REMOVE" == "true" ]; then
		preremovePackage
		removePackage
		postremovePackage
	fi

	if [ "$DEL_DOWNLOAD" == "true" ]; then
		deleteDownload
	fi

	if [ "$DEL_SOURCE" == "true" ]; then
		deleteSource
	fi

	if [ "$DEL_PACKAGE" == "true" ]; then
		deletePackage
	fi

	if [ "$LIST_INSTALLED_FILES" == "true" ]; then
		cat $PKG_INDEX/$PKG-$VER
	fi

	if [ "$DOWNLOAD" == "true" ]; then
		downloadSource
	fi

	if [ "$COMPILE" == "true" ]; then
		compileSource
	fi

	if [ "$EXTRACT" == "true" ]; then
		cleanSource
	fi

	if [ "$BUILD" == "true" ]; then
		buildPackage
	fi

	if [ "$CHECK" == "true" ]; then
		checkSource
	fi

	if [ "$INSTALL" == "true" ]; then
		preinstallPackage
		installPackage
		postinstallPackage
	fi

done
